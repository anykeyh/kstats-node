#!/usr/bin/env ruby
lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'optparse'
require 'yaml'
require 'kstats/node'
require 'json'

options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: kstats-node [options]"

  opts.on('-h', '--help', 'Show help screen'){ puts opts; exit }

  opts.on('-c', '--config CONF', 'Set configuration file (required)') do |config|
    options[:config] = config
  end

  opts.on('-i', '--install', 'Build into current directory all startup files.') do
    pwd = `pwd`.gsub("\n", "")

    puts "Create #{pwd}/conf..."
    `mkdir conf`

    puts "Create #{pwd}/probes..."
    `mkdir probes`

    puts "Create #{pwd}/conf/conf.yml..."
    File.open('conf/conf.yml', 'w') do |f|
      content = <<CONF
probes_dir: #{pwd}/probes
db_dir: #{pwd}/db.sqlite3
server:
  port: 1234
  bind: 0.0.0.0
CONF
      f.write content
    end

    Dir[File.expand_path('../../lib/kstats/probes/*', __FILE__)].each do |probefile|
      puts "cp #{probefile} #{pwd}/probes/"
      `cp #{probefile} #{pwd}/probes/`
    end

    puts "Done"

    exit
  end
end

optparse.parse!

#Parse the configuration file:
if options[:config].nil?
  puts optparse
  exit
end

puts "KStats::Node"

puts "Load configuration file"
config = YAML::load(File.read(options[:config]))
Kstats::Node::Config.init(config)

puts "Initialize database"
Kstats::Node::Database.init


Kstats::Node::Worker.launch!

require 'kstats/node/app'
Kstats::Node::App.run!

puts "Service is launched"
